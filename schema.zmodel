// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model barkNode {
  id           String  @id @default(uuid())
  name         String
  
  // Bark implementation
  path         String  @unique
  depth        Int     @default(1)
  numchild     Int     @default(0)

  isFolder     Boolean @default(true)
  displayPath  String
  supabasePath String?

  @@index([path])

  @@map("barkNodes")
}


// Optional approach relationship 1:1 with Bark
model Folder {
  id          String   @id @default(uuid())
  name        String

  displayPath String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  files       File[]

  @@index([displayPath])
  @@map("folders")
}

model File {
  id           String   @id @default(uuid())
  name         String

  displayPath  String   @unique
  folderPath   String?

  size         Int?
  mimeType     String?
  extension    String?
  folderId     String?

  supabasePath String?
  bucketName   String?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  folder       Folder?  @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@map("files")
}
